<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<description> Additional capabilities of the ApplicationContext:
		# Internationalization using MessageSource
		# Application Events (Standard and Custom Events)
		# Convenient access to low-level resources
		# Deploying a Spring ApplicationContext as a J2EE RAR file
	</description>

	<!-- ### Internationalization using MessageSource -->
	<!-- Access to messages in i18n-style, through the MessageSource interface -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<array>
				<value>mine/spring/appctx/additional/capabilities/resourceBundle1</value>
				<value>mine/spring/appctx/additional/capabilities/resourceBundle2</value>
			</array>
		</property>
	</bean>
	
	<!-- ### Application Events (Standard and Custom Events) -->
	<!-- Event publication to beans implementing the ApplicationListener interface, through the use of the ApplicationEventPublisher 
		interface. -->
		
	<!-- ### Convenient access to low-level resources -->
	<!-- Access to resources, such as URLs and files, through the ResourceLoader interface -->
	
	<!-- ### Deploying a Spring ApplicationContext as a J2EE RAR file -->
	
	<!-- ### Loading of multiple (hierarchical) contexts, allowing each to be focused on one particular layer, such as the web 
		layer of an application, through the HierarchicalBeanFactory interface. -->
	
</beans>